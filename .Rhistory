dir.create('./data/notices')
dir.create('./data/proclamations')
notices
library(tidyverse)
library(dplyr)
library(httr)
library(jsonlite)
library(downloader)
rm(list=ls())
# set wd to where the source file is
# make sure you have the datafiles in a /data/ folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
### FETCH DATA -----------------------------------
# https://www.federalregister.gov/developers/documentation/api/v1
# set the base url for the REST API
base = 'https://www.federalregister.gov/api/v1/'
# fetch all kinds of  documents
res = GET(paste0(base, 'documents.json'),
query = list(per_page = 20))
data = fromJSON(rawToChar(res$content))
df <- data.frame(data)
unique(df$results.type) # there are four different types of documents
range(df$results.publication_date) # data only goes back 10 days
# get a single executive order (for testing purposes)
res = GET('https://www.federalregister.gov/api/v1/documents/2021-10139.json')
doc.types = fromJSON(rawToChar(res$content))
# get all executive orders
res = GET('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Btype%5D%5B%5D=PRESDOCU&conditions%5Bpresidential_document_type%5D%5B%5D=executive_order')
data = fromJSON(rawToChar((res$content)))
exec.order1 <- data.frame(data$results)
range(exec.order1$publication_date) # data goes from 1997 to 2021
# as we can get maximum 1000 but there are more executive orders we make an additional request
res = GET('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Bpublication_date%5D%5Blte%5D=2000-01-01&conditions%5Bpresidential_document_type%5D%5B%5D=executive_order')
data = fromJSON((rawToChar(res$content)))
exec.order2 <- data.frame(data$results)
# get all presidential orders
res = GET(paste0('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Bpresidential_document_type%5D%5B%5D=', 'presidential_order'))
data = fromJSON((rawToChar(res$content)))
presidential.orders <- data.frame(data$results)
# get all memorandums
res = GET(paste0('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Bpresidential_document_type%5D%5B%5D=', 'memorandum'))
data = fromJSON((rawToChar(res$content)))
memorandums <- data.frame(data$results)
# get all notices
res = GET(paste0('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Bpresidential_document_type%5D%5B%5D=', 'memorandum'))
data = fromJSON((rawToChar(res$content)))
notices <- data.frame(data$results)
# get all proclamations
res = GET(paste0('https://www.federalregister.gov/api/v1/documents.json?per_page=1000&conditions%5Bpresidential_document_type%5D%5B%5D=', 'memorandum'))
data = fromJSON((rawToChar(res$content)))
proclamations <- data.frame(data$results)
### MERGE DATA -----------------------------------
#merge the dataframes for executive orders
exec.orders <- full_join(exec.order1, exec.order2)
range(exec.orders$publication_date) # data goes from 1994 to 2021
# check if the merge made sense
min_date <- min(range(exec.order1$publication_date)) # data goes from 1997 to 2021
missing_df <- df[which(exec.orders$publication_date < as.Date(min_date)), ]# it does
### SAVE DATA -----------------------------------
# download all pdfs
dir.create('./data/executive_orders')
dir.create('./data/presidential_orders')
dir.create('./data/memorandums')
dir.create('./data/notices')
dir.create('./data/proclamations')
# NOTE: CHANGE MODE = 'WB' FOR WINDOWS AND LEAVE IT OUT FOR MAC
# # save executive orders
# for (i in 1:nrow(exec.orders)){
#   name = exec.orders$document_number[i]
#   tryCatch(download(exec.orders$pdf_url[i], destfile = paste0('./data/executive_orders/', name, '.pdf'), timeout = 1000, mode = "wb"),
#            error = function(e) print(paste(name, e)))
# }
# save presidential orders
for (i in 1:nrow(exec.orders)){
name = presidential.orders$document_number[i]
tryCatch(download(presidential.orders$pdf_url[i], destfile = paste0('./data/presidential_orders/', name, '.pdf'), timeout = 1000, mode = "wb"),
error = function(e) print(paste(name, e)))
}
# save memorandums
for (i in 1:nrow(exec.orders)){
name = memorandums$document_number[i]
tryCatch(download(memorandums$pdf_url[i], destfile = paste0('./data/memorandums/', name, '.pdf'), timeout = 1000, mode = "wb"),
error = function(e) print(paste(name, e)))
}
library(here)
library(readtext)
library(quanteda)
library(stringr)
library(dplyr)
library(newsmap)
library(sentimentr)
library(data.table)
rm(list=ls())
Sys.setenv(lang = "ENG")
Sys.setlocale("LC_ALL", "English") #not setting this to English will break as.Date()
# set wd to where the source file is
# make sure you have the datafiles in a /data/ folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# as these pdf files are corrupt we delete them
file.remove('./data/executive_orders/00-31252.pdf')
file.remove('./data/executive_orders/2018-04860.pdf')
# function to read in data
read_pdfs <- function (folder_dir){
readtext(paste0('./data/', folder_dir),
docvarsfrom = "filenames",
docvarnames = 'document_number',
ignore_missing_files = TRUE,
verbosity = 3)
}
# read in all data
executive.orders <- read_pdfs('executive_orders/')
presidential.orders <- read_pdfs('presidential_orders/')
memorandums <- read_pdfs('memorandums/')
proclamations <- read_pdfs('proclamations/')
notices <- read_pdfs('notices/')
# merge with existing dfs to get date
executive.orders.df <- fread('./data/dataframes/executive_orders.csv')
presidential.orders.df <- fread('./data/dataframes/presidential_orders.csv')
memorandums.df <- fread('./data/dataframes/memorandums.csv')
proclamations.df <- fread('./data/dataframes/proclamations.csv')
notices.df <- fread('./data/dataframes/notices.csv')
# merge dataframes based on their document_number
executive.orders.df <- left_join(executive.orders.df, executive.orders, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
presidential.orders.df <- left_join(presidential.orders.df, presidential.orders, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
memorandums.df <- left_join(memorandums.df, memorandums, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
proclamations.df <- left_join(proclamations.df, proclamations, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
notices.df <- left_join(notices.df, notices, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
# add variable
executive.orders.df$document_type <- 'executive.order'
presidential.orders.df$document_type <- 'presidential.order'
memorandums.df$document_type <- 'memorandum'
proclamations.df$document_type <- 'proclamation'
notices.df$document_type <- 'notice'
# merge all dataframes together
documents <- rbind(executive.orders.df, presidential.orders.df, memorandums.df, proclamations.df, notices.df)
documents <- documents[order(publication_date),]
# count how many NAs we have
sum(is.na(documents$text))
# remove unnecessary values
rm(executive.orders, memorandums, notices, presidential.orders, proclamations)
# check how many unique documents we have
length(unique(documents$document_number))
glimpse(documents)
# The following code creates the already cleaned main corpus for our analysis.
corp_main <- corpus(documents)
corp_main <- tokens(corp_main,
remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE) %>%
tokens_remove(stopwords("english"))
number_corp_main<-ntoken(corp_main)
documents<-cbind(documents,number_corp_main)
corp1 <- corpus(documents)
month <- c("January", "February", "March", "April", "May", "June","July", "August", "September", "October", "November", "December")
day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday")
USA <- c("States", "Sec", "United","Act","Secretary","Council","State","Department","General","Section","Management","America","Committee","American","Americans","Washington")
tokens_corp1 <- tokens(corp1,
remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE) %>%
tokens_remove(c(stopwords("english"),
month,
day,
USA))
toks_label <- tokens_lookup(tokens_corp1,
dictionary = data_dictionary_newsmap_en,
levels = 3) # level 3 stands for countries
dfmat_label <- dfm(toks_label, tolower = FALSE)
dfmat_feat <- dfm(tokens_corp1, tolower = FALSE)
dfmat_feat_select <- dfm_select(dfmat_feat, pattern = "^[A-Z][A-Za-z0-9]+",
valuetype = "regex", case_insensitive = FALSE) %>%
dfm_trim(min_termfreq = 10)
# Next, we will train the Newsmap model in a semi-supervised document classification approach, using the two document-feature matrices.
tmod_nm <- textmodel_newsmap(dfmat_feat_select, y = dfmat_label)
coef(tmod_nm,n=15)[c("US","CN","IQ")]
# The following code predicts the most strongly associated country for each EO.
pred_nm <- predict(tmod_nm)
head(pred_nm,1000)
# Here we get the frequency of countries in the Executive Orders
prediction_country<-table(pred_nm)
prediction_country
# The following code will join df1 with our predicted country labels.
documents<-cbind(documents,pred_nm)
View(documents)
# Next, we will train the Newsmap model in a semi-supervised document classification approach, using the two document-feature matrices.
tmod_nm <- textmodel_newsmap(dfmat_feat_select, y = dfmat_label)
library(here)
library(readtext)
library(quanteda)
library(stringr)
library(dplyr)
library(newsmap)
library(sentimentr)
library(data.table)
coef(tmod_nm,n=15)[c("US","CN","IQ")]
# check how many unique documents we have
length(unique(documents$document_number))
## Extracting dates of issuance and executive order number ----
find_EO_dates <- function(data,
regex_pattern = "Executive\\s{1}Order\\s{1}\\d{4,6}\\s{1}of\\s{1}(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") {
mutate(data,
EO_nr =
str_extract(text, regex_pattern) %>%
str_extract("\\d{4,6}") %>%
as.numeric(),
date =
str_extract(text, regex_pattern) %>%
str_extract("(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") %>%
as.Date(format = "%B %d, %Y"))
}
documents <- documents %>% find_EO_dates()
library(here)
library(readtext)
library(quanteda)
library(stringr)
library(dplyr)
library(newsmap)
library(sentimentr)
library(data.table)
## Extracting dates of issuance and executive order number ----
find_EO_dates <- function(data,
regex_pattern = "Executive\\s{1}Order\\s{1}\\d{4,6}\\s{1}of\\s{1}(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") {
mutate(data,
EO_nr =
str_extract(text, regex_pattern) %>%
str_extract("\\d{4,6}") %>%
as.numeric(),
date =
str_extract(text, regex_pattern) %>%
str_extract("(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") %>%
as.Date(format = "%B %d, %Y"))
}
documents <- documents %>% find_EO_dates()
## Inspecting the result ----
nrow(documents)
range(nchar(documents$EO_nr), na.rm = TRUE)
sum(is.na(documents$EO_nr))
sum(is.na(documents$date))
sum(is.na(documents$EO_nr) | is.na(documents$date))
rm(list=ls())
Sys.setenv(lang = "ENG")
Sys.setlocale("LC_ALL", "English") #not setting this to English will break as.Date()
# set wd to where the source file is
# make sure you have the datafiles in a /data/ folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# as these pdf files are corrupt we delete them
file.remove('./data/executive_orders/00-31252.pdf')
file.remove('./data/executive_orders/2018-04860.pdf')
# function to read in data
read_pdfs <- function (folder_dir){
readtext(paste0('./data/', folder_dir),
docvarsfrom = "filenames",
docvarnames = 'document_number',
ignore_missing_files = TRUE,
verbosity = 3)
}
# read in all data
executive.orders <- read_pdfs('executive_orders/')
presidential.orders <- read_pdfs('presidential_orders/')
memorandums <- read_pdfs('memorandums/')
proclamations <- read_pdfs('proclamations/')
notices <- read_pdfs('notices/')
# merge with existing dfs to get date
executive.orders.df <- fread('./data/dataframes/executive_orders.csv')
presidential.orders.df <- fread('./data/dataframes/presidential_orders.csv')
memorandums.df <- fread('./data/dataframes/memorandums.csv')
proclamations.df <- fread('./data/dataframes/proclamations.csv')
notices.df <- fread('./data/dataframes/notices.csv')
# merge dataframes based on their document_number
executive.orders.df <- left_join(executive.orders.df, executive.orders, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
presidential.orders.df <- left_join(presidential.orders.df, presidential.orders, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
memorandums.df <- left_join(memorandums.df, memorandums, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
proclamations.df <- left_join(proclamations.df, proclamations, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
notices.df <- left_join(notices.df, notices, on = 'document_number') %>% select(-c(doc_id, abstract, excerpts, type))
# add variable
executive.orders.df$document_type <- 'executive.order'
presidential.orders.df$document_type <- 'presidential.order'
memorandums.df$document_type <- 'memorandum'
proclamations.df$document_type <- 'proclamation'
notices.df$document_type <- 'notice'
# merge all dataframes together
documents <- rbind(executive.orders.df, presidential.orders.df, memorandums.df, proclamations.df, notices.df)
documents <- documents[order(publication_date),]
# count how many NAs we have
sum(is.na(documents$text))
# remove unnecessary values
rm(executive.orders, memorandums, notices, presidential.orders, proclamations)
# check how many unique documents we have
length(unique(documents$document_number))
#importing a list of presidential documents sorted by president. contains the var "document_type"
list_of_documents_by_clinton <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=william-j-clinton&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_w.bush <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=george-w-bush&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_obama <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=barack-obama&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_trump <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=donald-trump&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_biden <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=joe-biden&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
#adding a new var "president" to the "documents" object by comparing "document_number"
documents <- documents %>%
mutate(president = as.factor(case_when(
(EO_nr >= 12945 & EO_nr <= 13197) | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(EO_nr >= 13198 & EO_nr <= 13488) | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(EO_nr >= 13489 & EO_nr <= 13764) | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(EO_nr >= 13765 & EO_nr <= 13984) | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(EO_nr >= 13985) | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
## Extracting dates of issuance and executive order number ----
find_EO_dates <- function(data,
regex_pattern = "Executive\\s{1}Order\\s{1}\\d{4,6}\\s{1}of\\s{1}(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") {
mutate(data,
EO_nr =
str_extract(text, regex_pattern) %>%
str_extract("\\d{4,6}") %>%
as.numeric(),
date =
str_extract(text, regex_pattern) %>%
str_extract("(January|February|March|April|May|June|July|August|September|October|November|December)\\s{1}\\d{1,2},\\s{1}\\d{4}") %>%
as.Date(format = "%B %d, %Y"))
}
documents <- documents %>% find_EO_dates()
#adding a new var "president" to the "documents" object by comparing "document_number"
documents <- documents %>%
mutate(president = as.factor(case_when(
(EO_nr >= 12945 & EO_nr <= 13197) | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(EO_nr >= 13198 & EO_nr <= 13488) | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(EO_nr >= 13489 & EO_nr <= 13764) | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(EO_nr >= 13765 & EO_nr <= 13984) | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(EO_nr >= 13985) | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
#remove lists to unclutter the environment
rm(
list_of_documents_by_clinton,
list_of_documents_by_w.bush,
list_of_documents_by_obama,
list_of_documents_by_trump,
list_of_documents_by_biden
)
View(documents)
# The following code creates the already cleaned main corpus for our analysis.
corp_main <- corpus(documents)
corp_main <- tokens(corp_main,
remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE) %>%
tokens_remove(stopwords("english"))
number_corp_main<-ntoken(corp_main)
documents<-cbind(documents,number_corp_main)
corp1 <- corpus(documents) # corpus for Newsmap
month <- c("January", "February", "March", "April", "May", "June","July", "August", "September", "October", "November", "December")
day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday","Sunday")
USA <- c("States", "Sec", "United","Act","Secretary","Council","State","Department","General","Section","Management","America","Committee","American","Americans","Washington")
tokens_corp1 <- tokens(corp1,
remove_punct = TRUE,
remove_numbers = TRUE,
remove_symbols = TRUE) %>%
tokens_remove(c(stopwords("english"),
month,
day,
USA))
toks_label <- tokens_lookup(tokens_corp1,
dictionary = data_dictionary_newsmap_en,
levels = 3) # level 3 stands for countries
dfmat_label <- dfm(toks_label, tolower = FALSE)
dfmat_feat <- dfm(tokens_corp1, tolower = FALSE)
dfmat_feat_select <- dfm_select(dfmat_feat, pattern = "^[A-Z][A-Za-z0-9]+",
valuetype = "regex", case_insensitive = FALSE) %>%
dfm_trim(min_termfreq = 10)
tmod_nm <- textmodel_newsmap(dfmat_feat_select, y = dfmat_label) # Training the Newsmap model
coef(tmod_nm,n=15)[c("US","CN","IQ")] # Extraction of model coefficients
pred_nm <- predict(tmod_nm) # Prediction of country labels on our documents
prediction_country<-table(pred_nm) # Frequency of countries in EO
prediction_country
documents<-cbind(documents,pred_nm) # joining documents with predicted country labels
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label
)
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label
tmod_nm
)
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label
tmod_nm
)
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label,
tmod_nm
)
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label,
tmod_nm,
day
)
#remove lists to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label,
tmod_nm,
day,
month,
corp1,
number_corp_main,
pred_nm,
prediction_country,
USA
)
corp1 <- corpus(documents) # corpus for Newsmap
#remove Data and values to unclutter the environment
rm(
dfmat_feat,
dfmat_feat_select,
dfmat_label,
tokens_corp1,
toks_label,
tmod_nm,
day,
month,
corp1,
number_corp_main,
pred_nm,
prediction_country,
USA
)
View(documents)
View(documents)
View(documents)
View(documents)
documents <- documents %>%
mutate(president = as.factor(case_when(
(title=="Amendment to Executive Order No. 12864": title=="Governmentwide Accountability for Merit System Principles; Workforce Information") | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(title == "Agency Responsibilities With Respect to Faith- Based and Community Initiatives" : title=="Designation of Officers to Act as President of the Overseas Private Investment Corporation") | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(title=="Presidential Records" : title=="Amending the Civil Service Rules, Executive Order 13488, and Executive Order 13467 To Modernize the Executive Branch-Wide Governance Structure and Processes for Security Clearances, Suitability and Fitness for Employment, and Credentialing, and Related Matters") | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(title=="Minimizing the Economic Burden of the Patient Protection and Affordable Care Act Pending Repeal" : title=="Taking Additional Steps To Address the National Emergency With Respect to Significant Malicious Cyber- Enabled Activities") | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(title=="Advancing Racial Equity and Support for Underserved Communities Through the Federal Government": title=="Improving the Nation's Cybersecurity") | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
documents <- documents %>%
mutate(president = as.factor(case_when(
(title="Amendment to Executive Order No. 12864": title="Governmentwide Accountability for Merit System Principles; Workforce Information") | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(title = "Agency Responsibilities With Respect to Faith- Based and Community Initiatives" : title="Designation of Officers to Act as President of the Overseas Private Investment Corporation") | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(title="Presidential Records" : title="Amending the Civil Service Rules, Executive Order 13488, and Executive Order 13467 To Modernize the Executive Branch-Wide Governance Structure and Processes for Security Clearances, Suitability and Fitness for Employment, and Credentialing, and Related Matters") | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(title="Minimizing the Economic Burden of the Patient Protection and Affordable Care Act Pending Repeal" : title="Taking Additional Steps To Address the National Emergency With Respect to Significant Malicious Cyber- Enabled Activities") | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(title="Advancing Racial Equity and Support for Underserved Communities Through the Federal Government": title="Improving the Nation's Cybersecurity") | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
#adding a new var "president" to the "documents" object by comparing "document_number"
documents <- documents %>%
mutate(president = as.factor(case_when(
(EO_nr >= 12945 & EO_nr <= 13197) | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(EO_nr >= 13198 & EO_nr <= 13488) | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(EO_nr >= 13489 & EO_nr <= 13764) | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(EO_nr >= 13765 & EO_nr <= 13984) | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(EO_nr >= 13985) | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
#keeping only data with no missing values
documents <- filter(documents, !is.na(date))
## Inspecting the result ----
nrow(documents)
range(nchar(documents$EO_nr), na.rm = TRUE)
sum(is.na(documents$EO_nr))
sum(is.na(documents$date))
sum(is.na(documents$EO_nr) | is.na(documents$date))
#keeping only data with no missing values
documents <- filter(documents, !is.na(date))
#importing a list of presidential documents sorted by president. contains the var "document_type"
list_of_documents_by_clinton <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=william-j-clinton&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_w.bush <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=george-w-bush&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_obama <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=barack-obama&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_trump <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=donald-trump&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
list_of_documents_by_biden <- read.csv("https://www.federalregister.gov/documents/search.csv?conditions%5Bcorrection%5D=0&conditions%5Bpresident%5D=joe-biden&conditions%5Bpresidential_document_type%5D%5B%5D=determination&conditions%5Bpresidential_document_type%5D%5B%5D=memorandum&conditions%5Bpresidential_document_type%5D%5B%5D=notice&conditions%5Bpresidential_document_type%5D%5B%5D=presidential_order&conditions%5Bsigning_date%5D%5Byear%5D=&conditions%5Btype%5D%5B%5D=PRESDOCU&fields%5B%5D=citation&fields%5B%5D=document_number&fields%5B%5D=end_page&fields%5B%5D=html_url&fields%5B%5D=pdf_url&fields%5B%5D=type&fields%5B%5D=subtype&fields%5B%5D=publication_date&fields%5B%5D=signing_date&fields%5B%5D=start_page&fields%5B%5D=title&fields%5B%5D=disposition_notes&order=document_number&per_page=1000")
#adding a new var "president" to the "documents" object by comparing "document_number"
documents <- documents %>%
mutate(president = as.factor(case_when(
(EO_nr >= 12945 & EO_nr <= 13197) | document_number %in% list_of_documents_by_clinton$document_number ~ "Clinton",
(EO_nr >= 13198 & EO_nr <= 13488) | document_number %in% list_of_documents_by_w.bush$document_number ~ "W. Bush",
(EO_nr >= 13489 & EO_nr <= 13764) | document_number %in% list_of_documents_by_obama$document_number ~ "Obama",
(EO_nr >= 13765 & EO_nr <= 13984) | document_number %in% list_of_documents_by_trump$document_number ~ "Trump",
(EO_nr >= 13985) | document_number %in% list_of_documents_by_biden$document_number ~ "Biden",
)))
#remove lists to unclutter the environment
rm(
list_of_documents_by_clinton,
list_of_documents_by_w.bush,
list_of_documents_by_obama,
list_of_documents_by_trump,
list_of_documents_by_biden
)
View(documents)
